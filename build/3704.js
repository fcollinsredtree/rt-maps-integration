"use strict";(globalThis.webpackChunkredtree_maps_integration=globalThis.webpackChunkredtree_maps_integration||[]).push([[3704],{13079:(e,t,i)=>{i.d(t,{A:()=>s});var h=i(49685),n=i(81173);class s{constructor(){this._resourceMap=new Map,this._inFlightResourceMap=new Map,this.geometryEngine=null,this.geometryEnginePromise=null}destroy(){this._inFlightResourceMap.clear(),this._resourceMap.clear()}getResource(e){return this._resourceMap.get(e)??null}async fetchResource(e,t){const i=this._resourceMap.get(e);if(i)return{width:i.width,height:i.height};let h=this._inFlightResourceMap.get(e);return h?h.then((e=>({width:e.width,height:e.height}))):(h=(0,n.M5)(e,t),this._inFlightResourceMap.set(e,h),h.then((t=>(this._inFlightResourceMap.delete(e),this._resourceMap.set(e,t),{width:t.width,height:t.height})),(()=>({width:0,height:0}))))}deleteResource(e){this._inFlightResourceMap.delete(e),this._resourceMap.delete(e)}loadFont(e){return(0,h.Al)(e)}}},16560:(e,t,i)=>{i.d(t,{previewCIMSymbol:()=>M});var h=i(6478),n=i(10926),s=i(13079),a=i(50446),r=i(91212),l=i(92004);const o=96/72;function c(e,t,i,h){const n=-t/2+1,s=t/2-1,a=i/2-1,r=-i/2+1;switch(e){case"esriGeometryPoint":return{x:0,y:0};case"esriGeometryPolyline":return{paths:[[[n,0],[0,0],[s,0]]]};default:return"legend"===h?{rings:[[[n,a],[s,0],[s,r],[n,r],[n,a]]]}:{rings:[[[n,a],[s,a],[s,r],[n,r],[n,a]]]}}}var u=i(12056),g=i(3160);const d=new class{constructor(e){this._spatialReference=e,this._imageDataCanvas=null,this._cimResourceManager=new s.A}get _canvas(){return this._imageDataCanvas||(this._imageDataCanvas=document.createElement("canvas")),this._imageDataCanvas}get resourceManager(){return this._cimResourceManager}async rasterizeCIMSymbolAsync(e,t,i,h,s,a,o,u,g){if(!e)return null;const{data:d}=e;if(!d||"CIMSymbolReference"!==d.type||!d.symbol)return null;const{symbol:m}=d;a||(a=(0,l.n5)(m));const y=await r.$.resolveSymbolOverrides(d,t,this._spatialReference,s,a,o,u),w=this._cimResourceManager,f=[];n.wp.fetchResources(y,w,f),n.wp.fetchFonts(y,w,f),f.length>0&&await Promise.all(f);const{width:p,height:M}=i,b=c(a,p,M,h),x=n.wp.getEnvelope(y,b,w);if(!x)return null;let v=1,_=0,R=0;switch(m.type){case"CIMPointSymbol":case"CIMTextSymbol":{let e=1;x.width>p&&(e=p/x.width);let t=1;x.height>M&&(t=M/x.height),"preview"===h&&(x.width<p&&(e=p/x.width),x.height<M&&(t=M/x.height)),v=Math.min(e,t),_=x.x+x.width/2,R=x.y+x.height/2}break;case"CIMLineSymbol":{(g||x.height>M)&&(v=M/x.height),R=x.y+x.height/2;const e=x.x*v+p/2,t=(x.x+x.width)*v+p/2,{paths:i}=b;i[0][0][0]-=e/v,i[0][2][0]-=(t-p)/v}break;case"CIMPolygonSymbol":{_=x.x+x.width/2,R=x.y+x.height/2;const e=x.x*v+p/2,t=(x.x+x.width)*v+p/2,i=x.y*v+M/2,h=(x.y+x.height)*v+M/2,{rings:n}=b;e<0&&(n[0][0][0]-=e,n[0][3][0]-=e,n[0][4][0]-=e),i<0&&(n[0][0][1]+=i,n[0][1][1]+=i,n[0][4][1]+=i),t>p&&(n[0][1][0]-=t-p,n[0][2][0]-=t-p),h>M&&(n[0][2][1]+=h-M,n[0][3][1]+=h-M)}}const C={type:"cim",data:{type:"CIMSymbolReference",symbol:y}};return this.rasterize(C,p,M,_,R,v,a,1,b)}rasterize(e,t,i,h,n,s,r,u=0,g=null){const{data:d}=e;if(!d||"CIMSymbolReference"!==d.type||!d.symbol)return null;const{symbol:m}=d,y=this._canvas,w=(window.devicePixelRatio||1)*o;y.width=t*w,y.height=i*w,r||(r=(0,l.n5)(m)),g||(g=c(r,t,i,"legend")),y.width+=2*u,y.height+=2*u;const f=y.getContext("2d",{willReadFrequently:!0}),p=a.IT.createIdentity();return p.translate(-h,-n),p.scale(s*w,-s*w),p.translate(t*w/2+u,i*w/2+u),f.clearRect(0,0,y.width,y.height),new a.Rj(f,this._cimResourceManager,p,!0).drawSymbol(m,g),f.getImageData(0,0,y.width,y.height)}}(null),m=(0,h.PN)(u.CB.size),y=(0,h.PN)(u.CB.maxSize),w=(0,h.PN)(u.CB.lineWidth),f=1;async function p(e,t,i){const h=t?.size;let s=null!=h&&"object"==typeof h&&"width"in h?h.width:h,a=null!=h&&"object"==typeof h&&"height"in h?h.height:h;if(null==s||null==a)if("esriGeometryPolygon"===i)s=m,a=m;else{const h=await async function(e,t,i){const{feature:h,fieldMap:s,viewParams:a}=t.cimOptions||t,l=await r.$.resolveSymbolOverrides(e.data,h,null,s,i,null,a);if(!l)return null;(e=e.clone()).data={type:"CIMSymbolReference",symbol:l},e.data.primitiveOverrides=void 0;const o=[];return n.wp.fetchResources(l,d.resourceManager,o),n.wp.fetchFonts(l,d.resourceManager,o),o.length>0&&await Promise.all(o),n.wp.getEnvelope(l,null,d.resourceManager)}(e,t,i);h&&(s=h.width,a=h.height),"esriGeometryPolyline"===i&&(s=w),s=null!=s&&isFinite(s)?Math.min(s,y):m,a=null!=a&&isFinite(a)?Math.max(Math.min(a,y),f):m}return"legend"===t.style&&"esriGeometryPolyline"===i&&(s=w),{width:s,height:a}}async function M(e,t={}){const{node:i,opacity:n,symbolConfig:s}=t,a=null!=s&&"object"==typeof s&&"isSquareFill"in s&&s.isSquareFill,r=t.cimOptions||t,o=r.geometryType||(0,l.n5)(e?.data?.symbol),c=await p(e,t,o),{feature:u,fieldMap:m}=r,y=a||"esriGeometryPolygon"!==o?"preview":"legend",w=await d.rasterizeCIMSymbolAsync(e,u,c,y,m,o,null,r.viewParams,r.allowScalingUp);if(!w)return null;const{width:f,height:M}=w,b=document.createElement("canvas");b.width=f,b.height=M,b.getContext("2d").putImageData(w,0,0);const x=(0,h.Lz)(c.width),v=(0,h.Lz)(c.height),_=new Image(x,v);_.src=b.toDataURL(),_.ariaLabel=t.ariaLabel??null,_.alt=t.ariaLabel??"",null!=n&&(_.style.opacity=`${n}`);let R=_;if(null!=t.effectView){const e={shape:{type:"image",x:0,y:0,width:x,height:v,src:_.src},fill:null,stroke:null,offset:[0,0]};R=(0,g.fz)([[e]],[x,v],{effectView:t.effectView,ariaLabel:t.ariaLabel})}return i&&R&&i.appendChild(R),R}},96407:(e,t,i)=>{i.d(t,{A:()=>n});var h=i(1065);class n{constructor(e,t,i,n){this.computedX=0,this.computedY=0,this.center=(0,h.fA)(e,t),this.centerT=(0,h.vt)(),this.halfWidth=i/2,this.halfHeight=n/2,this.width=i,this.height=n}get x(){return this.center[0]}get y(){return this.center[1]}get blX(){return this.center[0]+this.halfWidth}get blY(){return this.center[1]+this.halfHeight}get trX(){return this.center[0]-this.halfWidth}get trY(){return this.center[1]-this.halfHeight}get xmin(){return this.x-this.halfWidth}get xmax(){return this.x+this.halfWidth}get ymin(){return this.y-this.halfHeight}get ymax(){return this.y+this.halfHeight}set x(e){this.center[0]=e}set y(e){this.center[1]=e}clone(){return new n(this.x,this.y,this.width,this.height)}serialize(e){return e.writeF32(this.center[0]),e.writeF32(this.center[1]),e.push(this.width),e.push(this.height),e}findCollisionDelta(e,t=4){const i=Math.abs(e.centerT[0]-this.centerT[0]),h=Math.abs(e.centerT[1]-this.centerT[1]),n=(e.halfWidth+this.halfWidth+t)/i,s=(e.halfHeight+this.halfHeight+t)/h,a=Math.min(n,s);return Math.log2(a)}extend(e){const t=Math.min(this.xmin,e.xmin),i=Math.min(this.ymin,e.ymin),h=Math.max(this.xmax,e.xmax)-t,n=Math.max(this.ymax,e.ymax)-i,s=t+h/2,a=i+n/2;this.width=h,this.height=n,this.halfWidth=h/2,this.halfHeight=n/2,this.x=s,this.y=a}static deserialize(e){const t=e.readF32(),i=e.readF32(),h=e.readInt32(),s=e.readInt32();return new n(t,i,h,s)}}}}]);